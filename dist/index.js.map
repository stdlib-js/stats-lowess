{
  "version": 3,
  "sources": ["../lib/lowest.js", "../lib/lowess.js", "../lib/validate.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar max = require( '@stdlib/math-base-special-max' );\nvar pow = require( '@stdlib/math-base-special-pow' );\n\n\n// MAIN //\n\n/**\n* Calculates the fitted value `ys` for a value `xs` on the horizontal axis.\n*\n* ## Method\n*\n* -   The smoothed value for the x-axis value at the current index is computed using a (robust) locally weighted regression of degree one.  The tricube weight function is used with `h` equal to the maximum of `xs - x[ nleft ]` and `x[ nright ] - xs`.\n*\n* ## References\n*\n* -   Cleveland, William S. 1979. \"Robust Locally and Smoothing Weighted Regression Scatterplots.\" _Journal of the American Statistical Association_ 74 (368): 829\u201336. doi:[10.1080/01621459.1979.10481038](https://doi.org/10.1080/01621459.1979.10481038).\n* -   Cleveland, William S. 1981. \"Lowess: A program for smoothing scatterplots by robust locally weighted regression.\" _American Statistician_ 35 (1): 54\u201355. doi:[10.2307/2683591](https://doi.org/10.2307/2683591).\n*\n* @private\n* @param {NumericArray} x - ordered x-axis values (abscissa values)\n* @param {NumericArray} y - corresponding y-axis values (ordinate values)\n* @param {PositiveInteger} n - number of observations\n* @param {NonNegativeInteger} i - current index\n* @param {NonNegativeInteger} nleft - index of the first point used in computing the fitted value\n* @param {NonNegativeInteger} nright - index of the last point used in computing the fitted value\n* @param {ProbabilityArray} w - weights at indices from `nleft` to `nright` to be used in the calculation of the fitted value\n* @param {boolean} userw - boolean indicating whether a robust fit is carried out using the weights in `rw`\n* @param {ProbabilityArray} rw - robustness weights\n* @returns {number} fitted value\n*/\nfunction lowest( x, y, n, i, nleft, nright, w, userw, rw ) {\n\tvar range;\n\tvar nrt;\n\tvar h1;\n\tvar h9;\n\tvar xs;\n\tvar ys;\n\tvar h;\n\tvar a;\n\tvar b;\n\tvar c;\n\tvar r;\n\tvar j;\n\n\txs = x[ i ];\n\trange = x[ n - 1 ] - x[ 0 ];\n\th = max( xs - x[ nleft ], x[ nright ] - xs );\n\th9 = 0.999 * h;\n\th1 = 0.001 * h;\n\n\t// Compute weights (pick up all ties on right):\n\ta = 0.0; // sum of weights\n\tfor ( j = nleft; j < n; j++ ) {\n\t\tw[ j ] = 0.0;\n\t\tr = abs( x[ j ] - xs );\n\t\tif ( r <= h9 ) { // small enough for non-zero weight\n\t\t\tif ( r > h1 ) {\n\t\t\t\tw[ j ] = pow( 1.0-pow( r/h, 3.0 ), 3.0 );\n\t\t\t} else {\n\t\t\t\tw[ j ] = 1.0;\n\t\t\t}\n\t\t\tif ( userw ) {\n\t\t\t\tw[ j ] *= rw[ j ];\n\t\t\t}\n\t\t\ta += w[ j ];\n\t\t}\n\t\telse if ( x[ j ] > xs ) {\n\t\t\tbreak; // get out at first zero weight on right\n\t\t}\n\t}\n\tnrt = j - 1; // rightmost point (may be greater than `nright` because of ties)\n\tif ( a <= 0.0 ) {\n\t\treturn y[ i ];\n\t}\n\n\t// Make sum of weights equal to one:\n\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\tw[ j ] /= a;\n\t}\n\n\tif ( h > 0.0 ) { // use linear fit\n\t\t// Find weighted center of x values:\n\t\ta = 0.0;\n\t\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\t\ta += w[ j ] * x[ j ];\n\t\t}\n\t\tb = xs - a;\n\t\tc = 0.0;\n\t\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\t\tc += w[ j ] * pow( x[ j ] - a, 2.0 );\n\t\t}\n\t\tif ( sqrt( c ) > 0.001 * range ) {\n\t\t\t// Points are spread out enough to compute slope:\n\t\t\tb /= c;\n\t\t\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\t\t\tw[ j ] *= ( 1.0 + ( b*(x[j]-a) ) );\n\t\t\t}\n\t\t}\n\t}\n\tys = 0.0;\n\tfor ( j = nleft; j <= nrt; j++ ) {\n\t\tys += w[ j ] * y[ j ];\n\t}\n\treturn ys;\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowest;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar max = require( '@stdlib/math-base-special-max' );\nvar min = require( '@stdlib/math-base-special-min' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar lowest = require( './lowest.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort values in ascending order.\n*\n* @private\n* @param {number} a - first value\n* @param {number} b - second value\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// MAIN //\n\n/**\n* Locally-weighted polynomial regression via the LOWESS algorithm.\n*\n* ## Method\n*\n* -   Calculates fitted values using a nearest neighbor function and robust locally weighted regression of degree one with the tricube weight function.\n*\n* ## References\n*\n* -   Cleveland, William S. 1979. \"Robust Locally and Smoothing Weighted Regression Scatterplots.\" _Journal of the American Statistical Association_ 74 (368): 829\u201336. doi:[10.1080/01621459.1979.10481038](https://doi.org/10.1080/01621459.1979.10481038).\n* -   Cleveland, William S. 1981. \"Lowess: A program for smoothing scatterplots by robust locally weighted regression.\" _American Statistician_ 35 (1): 54\u201355. doi:[10.2307/2683591](https://doi.org/10.2307/2683591).\n*\n* @private\n* @param {NumericArray} x - ordered x-axis values (abscissa values)\n* @param {NumericArray} y - corresponding y-axis values (ordinate values)\n* @param {PositiveInteger} n - number of observations\n* @param {PositiveNumber} f - smoother span (proportion of points which influence smoothing at each value)\n* @param {NonNegativeInteger} nsteps - number of iterations in the robust fit\n* @param {PositiveNumber} delta - nonnegative parameter which may be used to reduce the number of computations\n* @returns {Object} sorted x-values and fitted values\n*/\nfunction lowess( x, y, n, f, nsteps, delta ) {\n\tvar nright;\n\tvar denom;\n\tvar nleft;\n\tvar alpha;\n\tvar cmad;\n\tvar iter;\n\tvar last;\n\tvar cut;\n\tvar res;\n\tvar m1;\n\tvar m2;\n\tvar ns;\n\tvar c1;\n\tvar c9;\n\tvar d1;\n\tvar d2;\n\tvar rw;\n\tvar ys;\n\tvar i;\n\tvar j;\n\tvar r;\n\n\tif ( n < 2 ) {\n\t\treturn y;\n\t}\n\tys = new Array( n );\n\tres = new Array( n );\n\trw = new Array( n );\n\n\t// Use at least two and at most n points:\n\tns = max( min( floor( f * n ), n ), 2 );\n\n\t// Robustness iterations:\n\tfor ( iter = 1; iter <= nsteps + 1; iter++ ) {\n\t\tnleft = 0;\n\t\tnright = ns - 1;\n\t\tlast = -1; // index of previously estimated point\n\t\ti = 0; // index of current point\n\t\tdo {\n\t\t\twhile ( nright < n - 1 ) {\n\t\t\t\t// Move nleft, nright to the right if radius decreases:\n\t\t\t\td1 = x[ i ] - x[ nleft ];\n\t\t\t\td2 = x[ nright + 1 ] - x[ i ];\n\n\t\t\t\t// If d1 <= d2 with x[nright+1] == x[nright], lowest fixes:\n\t\t\t\tif ( d1 <= d2 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Radius will not decrease by a move to the right...\n\t\t\t\tnleft += 1;\n\t\t\t\tnright += 1;\n\t\t\t}\n\t\t\t// Fitted value at x[ i ]:\n\t\t\tys[ i ] = lowest( x, y, n, i, nleft, nright, res, (iter > 1), rw );\n\n\t\t\tif ( last < i - 1 ) {\n\t\t\t\tdenom = x[ i ] - x[ last ];\n\t\t\t\tfor ( j = last + 1; j < i; j++ ) {\n\t\t\t\t\talpha = ( x[ j ] - x[ last ] ) / denom;\n\t\t\t\t\tys[ j ] = ( alpha*ys[ i ] ) + ( (1.0-alpha) * ys[ last ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tlast = i;\n\t\t\tcut = x[ last ] + delta;\n\t\t\tfor ( i = last + 1; i < n; i++ ) {\n\t\t\t\tif ( x[ i ] > cut ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( x[ i ] === x[ last ] ) {\n\t\t\t\t\tys[ i ] = ys[ last ];\n\t\t\t\t\tlast = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti = max( last + 1, i - 1 );\n\t\t} while ( last < n - 1 );\n\n\t\t// Calculate Residuals:\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tres[ i ] = y[ i ] - ys[ i ];\n\t\t}\n\t\tif ( iter > nsteps ) {\n\t\t\tbreak; // Compute robustness weights except last time...\n\t\t}\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\trw[i] = abs( res[i] );\n\t\t}\n\t\trw.sort( ascending );\n\t\tm1 = floor( n / 2.0 );\n\t\tm2 = n - m1 - 1.0;\n\t\tcmad = 3.0 * ( rw[m1] + rw[m2] );\n\t\tc9 = 0.999 * cmad;\n\t\tc1 = 0.001 * cmad;\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tr = abs( res[i] );\n\t\t\tif ( r <= c1 ) {\n\t\t\t\trw[ i ] = 1.0; // near 0, avoid underflow\n\t\t\t}\n\t\t\telse if ( r > c9 ) {\n\t\t\t\trw[ i ] = 0.0;  // near 1, avoid underflow\n\t\t\t}\n\t\t\telse {\n\t\t\t\trw[ i ] = pow( 1.0 - pow( r / cmad, 2.0 ), 2.0 );\n\t\t\t}\n\t\t}\n\t}\n\treturn {\n\t\t'x': x,\n\t\t'y': ys\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = lowess;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isPositiveNumber = require( '@stdlib/assert-is-positive-number' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isNonNegativeNumber = require( '@stdlib/assert-is-nonnegative-number' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {Probability} [options.f] - smoother span (proportion of points which influence smoothing at each value)\n* @param {NonNegativeInteger} [options.nsteps] - number of iterations in the robust fit\n* @param {NonNegativeNumber} [options.delta] - nonnegative parameter which may be used to save computations\n* @param {boolean} [options.sorted] - boolean indicating if the input array is in sorted order\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'f': 0.75,\n*     'nsteps': 6,\n*     'delta': 0.03,\n*     'sorted': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'f' ) ) {\n\t\topts.f = options.f;\n\t\tif ( !isPositiveNumber( opts.f ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'f', opts.f ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'nsteps' ) ) {\n\t\topts.nsteps = options.nsteps;\n\t\tif ( !isNonNegativeInteger( opts.nsteps ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'nsteps', opts.nsteps ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'delta' ) ) {\n\t\topts.delta = options.delta;\n\t\tif ( !isNonNegativeNumber( opts.delta ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative number. Option: `%s`.', 'delta', opts.delta ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'sorted' ) ) {\n\t\topts.sorted = options.sorted;\n\t\tif ( !isBoolean( opts.sorted ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'sorted', opts.sorted ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert-is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert-is-typed-array-like' );\nvar range = require( '@stdlib/stats-base-range' );\nvar format = require( '@stdlib/string-format' );\nvar lowess = require( './lowess.js' );\nvar validate = require( './validate.js' );\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function used to sort (x,y)-pairs in ascending order by the first coordinate.\n*\n* @private\n* @param {Array} a - first pair\n* @param {Array} b - second pair\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a[ 0 ] - b[ 0 ];\n}\n\n\n// MAIN //\n\n/**\n* Locally-weighted polynomial regression via the LOWESS algorithm.\n*\n* ## References\n*\n* -   Cleveland, William S. 1979. \"Robust Locally and Smoothing Weighted Regression Scatterplots.\" _Journal of the American Statistical Association_ 74 (368): 829\u201336. doi:[10.1080/01621459.1979.10481038](https://doi.org/10.1080/01621459.1979.10481038).\n* -   Cleveland, William S. 1981. \"Lowess: A program for smoothing scatterplots by robust locally weighted regression.\" _American Statistician_ 35 (1): 54\u201355. doi:[10.2307/2683591](https://doi.org/10.2307/2683591).\n*\n* @param {NumericArray} x - ordered x-axis values (abscissa values)\n* @param {NumericArray} y - corresponding y-axis values (ordinate values)\n* @param {Options} options - function options\n* @param {PositiveNumber} [options.f=2/3] - smoother span (proportion of points which influence smoothing at each value)\n* @param {integer} [options.nsteps=3] - number of iterations in the robust fit (fewer iterations translates to faster function execution)\n* @param {NonNegativeNumber} [options.delta] - nonnegative parameter which may be used to reduce the number of computations\n* @param {boolean} [options.sorted=false] - boolean indicating if the input array `x` is already in sorted order\n* @throws {TypeError} first argument must be a numeric array\n* @throws {TypeError} second argument must be a numeric array\n* @throws {RangeError} first and second arguments must have the same length\n* @returns {Object} ordered x-values and fitted values\n*/\nfunction main( x, y, options ) {\n\tvar nsteps;\n\tvar delta;\n\tvar opts;\n\tvar err;\n\tvar xy;\n\tvar f;\n\tvar i;\n\tvar n;\n\tvar r;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a numeric array. Value: `%s`.', y ) );\n\t}\n\tn = x.length;\n\tif ( y.length !== n ) {\n\t\tthrow new RangeError( 'invalid arguments. First and second arguments must have the same length.' );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\t// Input data has to be sorted:\n\tif ( opts.sorted !== true ) {\n\t\t// Copy to prevent mutation and sort by x:\n\t\txy = new Array( n );\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\txy[ i ] = [ x[ i ], y[ i ] ];\n\t\t}\n\t\txy.sort( ascending ); // TODO: Revisit once we have function for sorting multiple arrays by the elements of one of the arrays\n\t\tx = new Array( n );\n\t\ty = new Array( n );\n\t\tfor ( i = 0; i < n; i++ ) {\n\t\t\tx[ i ] = xy[ i ][ 0 ];\n\t\t\ty[ i ] = xy[ i ][ 1 ];\n\t\t}\n\t}\n\tif ( opts.nsteps === void 0 ) {\n\t\tnsteps = 3;\n\t} else {\n\t\tnsteps = opts.nsteps;\n\t}\n\tif ( opts.f === void 0 ) {\n\t\tf = 2.0/3.0;\n\t} else {\n\t\tf = opts.f;\n\t}\n\tif ( opts.delta === void 0 ) {\n\t\tr = range( n, x, 1 );\n\t\tdelta = 0.01 * r;\n\t} else {\n\t\tdelta = opts.delta;\n\t}\n\treturn lowess( x, y, n, f, nsteps, delta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Locally-weighted polynomial regression via the LOWESS algorithm.\n*\n* @module @stdlib/stats-lowess\n*\n* @example\n* var lowess = require( '@stdlib/stats-lowess' );\n*\n* var x = [\n*     4, 4, 7, 7, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14,\n*     14, 14, 14, 15, 15, 15, 16, 16, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 20,\n*     20, 20, 20, 20, 22, 23, 24, 24, 24, 24, 25\n* ];\n* var y = [\n*     2, 10, 4, 22, 16, 10, 18, 26, 34, 17, 28, 14, 20, 24, 28, 26, 34, 34, 46,\n*     26, 36, 60, 80, 20, 26, 54, 32, 40, 32, 40, 50, 42, 56, 76, 84, 36, 46, 68,\n*     32, 48, 52, 56, 64, 66, 54, 70, 92, 93, 120, 85\n* ];\n*\n* var out = lowess( x, y );\n* /* returns\n*     {\n*         'x': [\n*             4,\n*             4,\n*             7,\n*             7,\n*             ...,\n*             24,\n*             24,\n*             24,\n*             25\n*         ],\n*         'y': [\n*             ~4.857,\n*             ~4.857,\n*             ~13.1037,\n*             ~13.1037,\n*             ...,\n*             ~79.102,\n*             ~79.102,\n*             ~79.102,\n*             ~84.825\n*         ]\n*     }\n* *\\/\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,GAAAC,EAAA,cAsBA,IAAIC,EAAO,QAAS,gCAAiC,EACjDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAM,QAAS,+BAAgC,EAC/CC,EAAM,QAAS,+BAAgC,EA6BnD,SAASC,EAAQC,EAAGC,EAAGC,EAAGC,EAAGC,EAAOC,EAAQC,EAAGC,EAAOC,EAAK,CAC1D,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAUJ,IARAP,EAAKb,EAAGG,CAAE,EACVM,EAAQT,EAAGE,EAAI,CAAE,EAAIF,EAAG,CAAE,EAC1Be,EAAIlB,EAAKgB,EAAKb,EAAGI,CAAM,EAAGJ,EAAGK,CAAO,EAAIQ,CAAG,EAC3CD,EAAK,KAAQG,EACbJ,EAAK,KAAQI,EAGbC,EAAI,EACEI,EAAIhB,EAAOgB,EAAIlB,EAAGkB,IAGvB,GAFAd,EAAGc,CAAE,EAAI,EACTD,EAAIvB,EAAKI,EAAGoB,CAAE,EAAIP,CAAG,EAChBM,GAAKP,EACJO,EAAIR,EACRL,EAAGc,CAAE,EAAItB,EAAK,EAAIA,EAAKqB,EAAEJ,EAAG,CAAI,EAAG,CAAI,EAEvCT,EAAGc,CAAE,EAAI,EAELb,IACJD,EAAGc,CAAE,GAAKZ,EAAIY,CAAE,GAEjBJ,GAAKV,EAAGc,CAAE,UAEDpB,EAAGoB,CAAE,EAAIP,EAClB,MAIF,GADAH,EAAMU,EAAI,EACLJ,GAAK,EACT,OAAOf,EAAGE,CAAE,EAIb,IAAMiB,EAAIhB,EAAOgB,GAAKV,EAAKU,IAC1Bd,EAAGc,CAAE,GAAKJ,EAGX,GAAKD,EAAI,EAAM,CAGd,IADAC,EAAI,EACEI,EAAIhB,EAAOgB,GAAKV,EAAKU,IAC1BJ,GAAKV,EAAGc,CAAE,EAAIpB,EAAGoB,CAAE,EAIpB,IAFAH,EAAIJ,EAAKG,EACTE,EAAI,EACEE,EAAIhB,EAAOgB,GAAKV,EAAKU,IAC1BF,GAAKZ,EAAGc,CAAE,EAAItB,EAAKE,EAAGoB,CAAE,EAAIJ,EAAG,CAAI,EAEpC,GAAKrB,EAAMuB,CAAE,EAAI,KAAQT,EAGxB,IADAQ,GAAKC,EACCE,EAAIhB,EAAOgB,GAAKV,EAAKU,IAC1Bd,EAAGc,CAAE,GAAO,EAAQH,GAAGjB,EAAEoB,CAAC,EAAEJ,EAG/B,CAEA,IADAF,EAAK,EACCM,EAAIhB,EAAOgB,GAAKV,EAAKU,IAC1BN,GAAMR,EAAGc,CAAE,EAAInB,EAAGmB,CAAE,EAErB,OAAON,CACR,CAKApB,EAAO,QAAUK,ICrIjB,IAAAsB,EAAAC,EAAA,SAAAC,GAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAM,QAAS,+BAAgC,EAC/CC,EAAM,QAAS,+BAAgC,EAC/CC,EAAM,QAAS,+BAAgC,EAC/CC,EAAS,IAab,SAASC,EAAWC,EAAGC,EAAI,CAC1B,OAAOD,EAAIC,CACZ,CA0BA,SAASC,EAAQC,EAAGC,EAAGC,EAAGC,EAAGC,EAAQC,EAAQ,CAC5C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKxB,EAAI,EACR,OAAOD,EAUR,IARAsB,EAAK,IAAI,MAAOrB,CAAE,EAClBY,EAAM,IAAI,MAAOZ,CAAE,EACnBoB,EAAK,IAAI,MAAOpB,CAAE,EAGlBe,EAAKzB,EAAKC,EAAKH,EAAOa,EAAID,CAAE,EAAGA,CAAE,EAAG,CAAE,EAGhCS,EAAO,EAAGA,GAAQP,EAAS,EAAGO,IAAS,CAC5CH,EAAQ,EACRF,EAASW,EAAK,EACdL,EAAO,GACPY,EAAI,EACJ,EAAG,CACF,KAAQlB,EAASJ,EAAI,IAEpBkB,EAAKpB,EAAGwB,CAAE,EAAIxB,EAAGQ,CAAM,EACvBa,EAAKrB,EAAGM,EAAS,CAAE,EAAIN,EAAGwB,CAAE,EAGvB,EAAAJ,GAAMC,KAIXb,GAAS,EACTF,GAAU,EAKX,GAFAiB,EAAIC,CAAE,EAAI7B,EAAQK,EAAGC,EAAGC,EAAGsB,EAAGhB,EAAOF,EAAQQ,EAAMH,EAAO,EAAIW,CAAG,EAE5DV,EAAOY,EAAI,EAEf,IADAjB,EAAQP,EAAGwB,CAAE,EAAIxB,EAAGY,CAAK,EACnBa,EAAIb,EAAO,EAAGa,EAAID,EAAGC,IAC1BhB,GAAUT,EAAGyB,CAAE,EAAIzB,EAAGY,CAAK,GAAML,EACjCgB,EAAIE,CAAE,EAAMhB,EAAMc,EAAIC,CAAE,GAAS,EAAIf,GAASc,EAAIX,CAAK,EAKzD,IAFAA,EAAOY,EACPX,EAAMb,EAAGY,CAAK,EAAIP,EACZmB,EAAIZ,EAAO,EAAGY,EAAItB,GAClB,EAAAF,EAAGwB,CAAE,EAAIX,GADYW,IAIrBxB,EAAGwB,CAAE,IAAMxB,EAAGY,CAAK,IACvBW,EAAIC,CAAE,EAAID,EAAIX,CAAK,EACnBA,EAAOY,GAGTA,EAAIhC,EAAKoB,EAAO,EAAGY,EAAI,CAAE,CAC1B,OAAUZ,EAAOV,EAAI,GAGrB,IAAMsB,EAAI,EAAGA,EAAItB,EAAGsB,IACnBV,EAAKU,CAAE,EAAIvB,EAAGuB,CAAE,EAAID,EAAIC,CAAE,EAE3B,GAAKb,EAAOP,EACX,MAED,IAAMoB,EAAI,EAAGA,EAAItB,EAAGsB,IACnBF,EAAGE,CAAC,EAAIjC,EAAKuB,EAAIU,CAAC,CAAE,EAQrB,IANAF,EAAG,KAAM1B,CAAU,EACnBmB,EAAKzB,EAAOY,EAAI,CAAI,EACpBc,EAAKd,EAAIa,EAAK,EACdL,EAAO,GAAQY,EAAGP,CAAE,EAAIO,EAAGN,CAAE,GAC7BG,EAAK,KAAQT,EACbQ,EAAK,KAAQR,EACPc,EAAI,EAAGA,EAAItB,EAAGsB,IACnBE,EAAInC,EAAKuB,EAAIU,CAAC,CAAE,EACXE,GAAKR,EACTI,EAAIE,CAAE,EAAI,EAEDE,EAAIP,EACbG,EAAIE,CAAE,EAAI,EAGVF,EAAIE,CAAE,EAAI9B,EAAK,EAAMA,EAAKgC,EAAIhB,EAAM,CAAI,EAAG,CAAI,CAGlD,CACA,MAAO,CACN,EAAKV,EACL,EAAKuB,CACN,CACD,CAKAlC,EAAO,QAAUU,ICvLjB,IAAA4B,EAAAC,EAAA,SAAAC,GAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,iCAAkC,EACxDC,GAAW,QAAS,gCAAiC,EACrDC,GAAmB,QAAS,mCAAoC,EAChEC,GAAuB,QAAS,uCAAwC,EAAE,YAC1EC,GAAsB,QAAS,sCAAuC,EAAE,YACxEC,GAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAS,QAAS,uBAAwB,EA8B9C,SAASC,GAAUC,EAAMC,EAAU,CAClC,OAAMR,GAAUQ,CAAQ,EAGnBT,EAAYS,EAAS,GAAI,IAC7BD,EAAK,EAAIC,EAAQ,EACZ,CAACP,GAAkBM,EAAK,CAAE,GACvB,IAAI,UAAWF,EAAQ,uEAAwE,IAAKE,EAAK,CAAE,CAAE,EAGjHR,EAAYS,EAAS,QAAS,IAClCD,EAAK,OAASC,EAAQ,OACjB,CAACN,GAAsBK,EAAK,MAAO,GAChC,IAAI,UAAWF,EAAQ,2EAA4E,SAAUE,EAAK,MAAO,CAAE,EAG/HR,EAAYS,EAAS,OAAQ,IACjCD,EAAK,MAAQC,EAAQ,MAChB,CAACL,GAAqBI,EAAK,KAAM,GAC9B,IAAI,UAAWF,EAAQ,0EAA2E,QAASE,EAAK,KAAM,CAAE,EAG5HR,EAAYS,EAAS,QAAS,IAClCD,EAAK,OAASC,EAAQ,OACjB,CAACJ,GAAWG,EAAK,MAAO,GACrB,IAAI,UAAWF,EAAQ,+DAAgE,SAAUE,EAAK,MAAO,CAAE,EAGjH,KA1BC,IAAI,UAAWF,EAAQ,qEAAsEG,CAAQ,CAAE,CA2BhH,CAKAV,EAAO,QAAUQ,KC5FjB,IAAAG,EAAAC,EAAA,SAAAC,GAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,gCAAiC,EAAE,WAC5DC,EAAmB,QAAS,oCAAqC,EACjEC,GAAQ,QAAS,0BAA2B,EAC5CC,EAAS,QAAS,uBAAwB,EAC1CC,GAAS,IACTC,GAAW,IAaf,SAASC,GAAWC,EAAGC,EAAI,CAC1B,OAAOD,EAAG,CAAE,EAAIC,EAAG,CAAE,CACtB,CAyBA,SAASC,GAAMC,EAAGC,EAAGC,EAAU,CAC9B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAK,CAACpB,EAAkBS,CAAE,GAAK,CAACV,EAAeU,CAAE,EAChD,MAAM,IAAI,UAAWP,EAAQ,yEAA0EO,CAAE,CAAE,EAE5G,GAAK,CAACT,EAAkBU,CAAE,GAAK,CAACX,EAAeW,CAAE,EAChD,MAAM,IAAI,UAAWR,EAAQ,0EAA2EQ,CAAE,CAAE,EAG7G,GADAS,EAAIV,EAAE,OACDC,EAAE,SAAWS,EACjB,MAAM,IAAI,WAAY,0EAA2E,EAGlG,GADAL,EAAO,CAAC,EACH,UAAU,OAAS,IACvBC,EAAMX,GAAUU,EAAMH,CAAQ,EACzBI,GACJ,MAAMA,EAIR,GAAKD,EAAK,SAAW,GAAO,CAG3B,IADAE,EAAK,IAAI,MAAOG,CAAE,EACZD,EAAI,EAAGA,EAAIC,EAAGD,IACnBF,EAAIE,CAAE,EAAI,CAAET,EAAGS,CAAE,EAAGR,EAAGQ,CAAE,CAAE,EAK5B,IAHAF,EAAG,KAAMX,EAAU,EACnBI,EAAI,IAAI,MAAOU,CAAE,EACjBT,EAAI,IAAI,MAAOS,CAAE,EACXD,EAAI,EAAGA,EAAIC,EAAGD,IACnBT,EAAGS,CAAE,EAAIF,EAAIE,CAAE,EAAG,CAAE,EACpBR,EAAGQ,CAAE,EAAIF,EAAIE,CAAE,EAAG,CAAE,CAEtB,CACA,OAAKJ,EAAK,SAAW,OACpBF,EAAS,EAETA,EAASE,EAAK,OAEVA,EAAK,IAAM,OACfG,EAAI,EAAI,EAERA,EAAIH,EAAK,EAELA,EAAK,QAAU,QACnBM,EAAInB,GAAOkB,EAAGV,EAAG,CAAE,EACnBI,EAAQ,IAAOO,GAEfP,EAAQC,EAAK,MAEPX,GAAQM,EAAGC,EAAGS,EAAGF,EAAGL,EAAQC,CAAM,CAC1C,CAKAf,EAAO,QAAUU,KC9DjB,IAAIa,GAAO,IAKX,OAAO,QAAUA",
  "names": ["require_lowest", "__commonJSMin", "exports", "module", "sqrt", "abs", "max", "pow", "lowest", "x", "y", "n", "i", "nleft", "nright", "w", "userw", "rw", "range", "nrt", "h1", "h9", "xs", "ys", "h", "a", "b", "c", "r", "j", "require_lowess", "__commonJSMin", "exports", "module", "floor", "abs", "max", "min", "pow", "lowest", "ascending", "a", "b", "lowess", "x", "y", "n", "f", "nsteps", "delta", "nright", "denom", "nleft", "alpha", "cmad", "iter", "last", "cut", "res", "m1", "m2", "ns", "c1", "c9", "d1", "d2", "rw", "ys", "i", "j", "r", "require_validate", "__commonJSMin", "exports", "module", "hasOwnProp", "isObject", "isPositiveNumber", "isNonNegativeInteger", "isNonNegativeNumber", "isBoolean", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "isNumberArray", "isTypedArrayLike", "range", "format", "lowess", "validate", "ascending", "a", "b", "main", "x", "y", "options", "nsteps", "delta", "opts", "err", "xy", "f", "i", "n", "r", "main"]
}
